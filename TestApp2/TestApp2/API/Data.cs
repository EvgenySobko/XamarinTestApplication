using System;using System.Collections.Generic;using System.IO;using System.Linq;using System.Threading.Tasks;using Android.Database;using Android.Util;using SQLite;using TestApp2.Entities;namespace TestApp2{    public class Data{        private readonly IApi api = ApiFactory.CreateClient();        private readonly SQLiteConnection database = new SQLiteConnection(Path.Combine(            Environment.GetFolderPath(Environment.SpecialFolder.Personal), "ormdemo.db3"));        /*public Data() => database.CreateTable<Beer>();*/        public async Task<List<Beer>> GetAllBeer(){            return await getAllFromDatabase();        }        public async Task<List<Beer>> GetBeerById(int id){            return await getBeerFromDatabase(id);        }        private async Task<List<Beer>> getAllFromDatabase(){            database.CreateTable<Beer>();            if (!database.Table<Beer>().Any()){                var result = await api.GetAllBeers();                database.InsertAll(result);                Log.Debug("WARNING", "done");                Log.Debug("WARNING", result.ToString());            }            var list = from element in database.Table<Beer>() select element;            Log.Debug("WARNING", list.ToString());            return list.ToList();        }        private async Task<List<Beer>> getBeerFromDatabase(int id){            if (!database.Table<Beer>().Any()){                var result = await api.GetBeerById(id);                database.InsertAll(result);            }            var list = from element in database.Table<Beer>()                where element.id == id                select element;            Log.Debug("WARNING", list.ToString());            return list.ToList();        }    }}